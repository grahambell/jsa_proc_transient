#!/usr/bin/env python2

"""
transient_run - Data reduction wrapper script for JCMT transient survey

Usage:
    transient_run [-v | -q] --id <id> --inputs <inputs> --transdir <transdir>

Options:
    --help, -h              Show usage information.
    --verbose, -v           Show debugging information.
    --quiet, -q             Do not show general logging information.
    --inputs <inputs>       Specify file giving input file listing.
    --transdir <transdir>   Specify target directory for final products.
"""

from __future__ import absolute_import, division, print_function

import logging
import os
import sys

from docopt import docopt

logger = logging.getLogger(sys.argv[0])


def main():
    """
    Main routine for transient processing script.

    Handles command line arguments, reads the input file list
    and checks that the transfer directory exists.
    """

    args = docopt(__doc__)

    # Configure logging.
    logging.basicConfig(
        level=logging.DEBUG if args['--verbose'] else (
            logging.WARNING if args['--quiet'] else logging.INFO))

    # Read the input file listing.
    logger.debug('Reading input file list')
    try:
        inputs = []

        with open(args['--inputs']) as f:
            for file_ in f:
                file_ = file_.strip()

                if not file_:
                    continue

                if not os.path.exists(file_):
                    raise Exception(
                        'Input file {0} does not exist'.format(file_))

                inputs.append(file_)

    except:
        logging.exception('Exception reading input file listing')
        sys.exit(1)

    # Check that the transfer directory exists.
    logger.debug('Checking transfer directory exists')
    transdir = args['--transdir']

    if not os.path.isdir(transdir):
        logging.error('Specified transdir does not exist (or is a file)')
        sys.exit(1)

    # Run the data processing function.
    logger.debug('About to begin processing')
    try:
        run_processing(inputs, transdir)

    except:
        logging.exception('Exception during processing')
        sys.exit(1)

    logger.debug('Processing complete')


def run_processing(inputs, transdir):
    """
    Function to launch data processing.

    :param inputs: list of input file names
    :param transdir: target output directory
    """

    logger.info('Writing dummy output file')
    with open(os.path.join(transdir, 'dummy_output.txt'), 'w') as f:
        for file_ in enumerate(inputs):
            print('{0}: {1}'.format(*file_), file=f)


if __name__ == '__main__':
    main()
