#!/usr/bin/env python2

"""
transient_xfer - Data transfer script for JCMT transient survey

Usage:
    transient_xfer [-v | -q] --transdir <transdir>

Options:
    --help, -h              Show usage information.
    --verbose, -v           Show debugging information.
    --quiet, -q             Do not show general logging information.
    --transdir <transdir>   Specify target directory for final products.
"""

from __future__ import absolute_import, division, print_function

import logging
import os
import sys

from docopt import docopt

logger = logging.getLogger(sys.argv[0])


def main():
    """
    Main routine for transient transfer script.

    Handles command line arguments, checks that the transfer directory exists
    and reads a listing of its contents.
    """

    args = docopt(__doc__)

    # Configure logging.
    logging.basicConfig(
        level=logging.DEBUG if args['--verbose'] else (
            logging.WARNING if args['--quiet'] else logging.INFO))

    # Check that the transfer directory exists.
    logger.debug('Checking transfer directory exists')
    transdir = args['--transdir']

    if not os.path.isdir(transdir):
        logging.error('Specified transdir does not exist (or is a file)')
        sys.exit(1)

    # Get transfer directory listing.
    filenames = []
    logger.debug('Reading transfer directory listing')
    for file_ in os.listdir(transdir):
        if os.path.isfile(os.path.join(transdir, file_)):
            filenames.append(file_)
        else:
            logger.warning(
                'Transfer directory contains non-file {0}'.format(file_))

    # Run the data processing function.
    logger.debug('About to begin transfer')
    try:
        run_transfer(transdir, filenames)

    except:
        logging.exception('Exception during transfer')
        sys.exit(1)

    logger.debug('Transfer complete')


def run_transfer(transdir, filenames):
    """
    Function to launch data transfer.

    :param transdir: directory containing files to transfer
    :param filenames: list of files to transfer
    """

    logger.info('Transfer directory: {0}'.format(transdir))
    for file_ in enumerate(filenames):
        logger.info('File {0}: {1}'.format(*file_))


if __name__ == '__main__':
    main()
